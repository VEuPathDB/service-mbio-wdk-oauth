
networks:
  internal:
    external: false
  traefik:
    external: true
  rabbitmq:
    external: false
  monitoring-ext:
    external: true

volumes:
  eda-compute-db:
  cache-db-data:

services:

  ####################
  #### WDK Service ###
  ####################

  wdk:
    image: mbio-wdk:${MBIO_WDK_TAG:-latest}

    volumes:
      - type: bind
        source: ${API_SITE_WEB_SERVICE_FILES_DIR:-${DATA_STORAGE_ROOT_DIR}/apiSiteFilesMirror/webServices}
        target: ${API_SITE_WEB_SERVICE_FILES_MOUNT:-/webServiceFiles}
        read_only: true
      - type: bind
        source: ${STEP_ANALYSIS_JOBS_DIR:-${DATA_STORAGE_ROOT_DIR}/tmp/wdkStepAnalysisJobs}
        target: ${STEP_ANALYSIS_JOBS_MOUNT:-/stepAnalysisJobs}
      - type: bind
        source: ${LOGS_DIR:-${DATA_STORAGE_ROOT_DIR}/logs}
        target: ${LOGS_MOUNT:-/opt/logs}
      - type: bind
        source: ${SECRETS_DIR:-${DATA_STORAGE_ROOT_DIR}/secrets}
        target: ${SECRETS_MOUNT:-/secrets}
        read_only: true

    environment:

      # external file mount locations
      API_SITE_WEB_SERVICE_FILES_DIR: ${API_SITE_WEB_SERVICE_FILES_MOUNT:-/webServiceFiles}
      STEP_ANALYSIS_JOBS_DIR: ${STEP_ANALYSIS_JOBS_MOUNT:-/stepAnalysisJobs}
      TOMCAT_LOGS_DIR: ${LOGS_MOUNT:-/opt/logs}/tomcat
      NGINX_LOGS_DIR: ${LOGS_MOUNT:-/opt/logs}/nginx

      # required mounted secret value files
      WDK_SECRET_KEY: ${WDK_SECRET_KEY:?}
      OAUTH_SIGNING_KEY_STORE: ${SECRETS_MOUNT:-/secrets}/${OAUTH_SIGNING_KEY_STORE_FILENAME:-oauth-keys.pkcs12}
      OAUTH_SIGNING_KEY_STORE_PW: ${OAUTH_SIGNING_KEY_STORE_PW}
      OAUTH_DB_PLATFORM: ${OAUTH_DB_PLATFORM}

      # oauth contact information
      OAUTH_URL: ${OAUTH_URL}
      WDK_OAUTH_CLIENT_ID: ${WDK_OAUTH_CLIENT_ID}
      WDK_OAUTH_CLIENT_SECRET: ${WDK_OAUTH_CLIENT_SECRET}
      SERVICE_OAUTH_CLIENT_ID: ${SERVICE_OAUTH_CLIENT_ID}
      SERVICE_OAUTH_CLIENT_SECRET: ${SERVICE_OAUTH_CLIENT_SECRET}

      SMTP_HOST: ${SMTP_HOST}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}

      # app db (WDK)
      APP_DB_LOGIN: ${APP_DB_LOGIN}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}
      APP_DB_CONNECTION_URL: ${APP_DB_CONNECTION_URL}
      APP_DB_PLATFORM: ${APP_DB_PLATFORM}

      # VDI user dataset schemas (env vars borrowed from VDI config)
      VDI_CONTROL_SCHEMA: ${DB_CONNECTION_CONTROL_SCHEMA_MICROBIOME:-vdi_control_${VDI_SCHEMA_SUFFIX}}
      VDI_DATASETS_SCHEMA: ${DB_CONNECTION_DATA_SCHEMA_MICROBIOME:-vdi_datasets_${VDI_SCHEMA_SUFFIX}}

      # user db (WDK)
      USER_DB_LOGIN: ${USER_DB_LOGIN}
      USER_DB_PASSWORD: ${USER_DB_PASSWORD}
      USER_DB_CONNECTION_URL: ${USER_DB_CONNECTION_URL}
      USER_DB_PLATFORM: ${USER_DB_PLATFORM}

      # account db (oauth)
      ACCT_DB_LOGIN: ${ACCT_DB_LOGIN}
      ACCT_DB_PASSWORD: ${ACCT_DB_PASSWORD}
      ACCT_DB_CONNECTION_URL: ${ACCT_DB_CONNECTION_URL}
      ACCT_DB_PLATFORM: ${ACCT_DB_PLATFORM}
      

    networks:
      default:
      traefik:
      internal:
        aliases:
          - oauth-internal

    labels:
      - "prometheus.scrape_enabled=true"
      - "com.centurylinklabs.watchtower.enable=${MBIOWDK_WATCHTOWER:-false}"
      - "traefik.http.services.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.loadbalancer.server.port=${MBIOWDK_SERVER_PORT:-80}"
      - "traefik.http.routers.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.rule=Host(`${TRAEFIK_MBIOWDK_HOST:-mbio-dev.local.apidb.org}`)"
      - "traefik.http.routers.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.tls=true"
      - "traefik.http.routers.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.entrypoints=${TRAEFIK_ENTRYPOINTS:-local}"
      - "traefik.docker.network=traefik"


  #####################
  #### EDA Services ###
  #####################

  eda:
    image: veupathdb/service-eda:${EDA_TAG:-latest}

    volumes:
      - type: bind
        source: ${MACHINE_BINARY_FILES_DIR:-${DATA_STORAGE_ROOT_DIR}/apiSiteFilesMirror/webServices}
        target: ${SERVICE_BINARY_FILES_MOUNT:-/binaryFiles}
        read_only: true
      - type: bind
        source: ${DOWNLOAD_FILES_DIR:-${DATA_STORAGE_ROOT_DIR}/apiSiteFilesMirror/downloadSite}
        target: /downloadFiles
        read_only: true
    environment:
      # port providing the service
      SERVER_PORT: ${DATA_SERVER_PORT:-80}

      # URLs of required services
      SUBSETTING_SERVICE_URL: ${SUBSETTING_SERVICE_URL:-http://localhost}:${SUBSETTING_SERVER_PORT:-80}
      MERGING_SERVICE_URL: ${MERGING_SERVICE_URL:-http://localhost}:${MERGING_SERVER_PORT:-80}
      COMPUTE_SERVICE_URL: ${COMPUTE_SERVICE_URL:-http://localhost}:${COMPUTE_SERVER_PORT:-80}
      RSERVE_URL: ${RSERVE_URL:-http://rserve-internal:6311}
      DATASET_ACCESS_SERVICE_URL: ${DATASET_ACCESS_SERVICE_URL:-http://localhost}:${DATASET_ACCESS_SERVER_PORT:-80}

      # Used for compute, can combine with above in cleanup phase
      DATASET_ACCESS_HOST: ${DATASET_ACCESS_SERVICE_URL:-http://localhost}:${DATASET_ACCESS_SERVER_PORT:-80}
      EDA_MERGE_HOST: ${MERGING_SERVICE_URL:-http://localhost}:${MERGING_SERVER_PORT:-80}
      EDA_SUBSETTING_HOST: ${SUBSETTING_SERVICE_URL:-http://localhost}:${SUBSETTING_SERVER_PORT:-80}

      # LDAP values to look up DBs
      LDAP_SERVER: ${LDAP_SERVER}
      ORACLE_BASE_DN: ${ORACLE_BASE_DN}

      # Application Database
      APP_DB_TNS_NAME: ${APP_DB_TNS_NAME}
      APP_DB_HOST: ${APP_DB_HOST}
      APP_DB_PORT: ${APP_DB_PORT}
      APP_DB_NAME: ${APP_DB_NAME}
      APP_DB_USER: ${APP_DB_LOGIN}
      APP_DB_PASS: ${APP_DB_PASSWORD}
      APP_DB_SCHEMA: ${APP_DB_SCHEMA:-eda.}
      APP_DB_PLATFORM: ${APP_DB_PLATFORM}

      APP_DB_POOL_SIZE: ${APP_DB_POOL_SIZE:-20}
      USER_STUDY_SCHEMA: ${USER_STUDY_SCHEMA:-vdi_datasets_${VDI_SCHEMA_SUFFIX}}

      # Account Database
      ACCT_DB_TNS_NAME: ${ACCT_DB_TNS_NAME}
      ACCT_DB_HOST: ${ACCT_DB_HOST}
      ACCT_DB_PORT: ${ACCT_DB_PORT}
      ACCT_DB_NAME: ${ACCT_DB_NAME}
      ACCT_DB_USER: ${ACCT_DB_LOGIN}
      ACCT_DB_PASS: ${ACCT_DB_PASSWORD}
      ACCT_DB_POOL_SIZE: ${ACCT_DB_POOL_SIZE:-3}
      ACCT_DB_PLATFORM: ${ACCT_DB_PLATFORM}

      # User Database
      USER_DB_TNS_NAME: ${USER_DB_TNS_NAME}
      USER_DB_HOST: ${USER_DB_HOST}
      USER_DB_PORT: ${USER_DB_PORT}
      USER_DB_NAME: ${USER_DB_NAME}
      USER_DB_USER: ${USER_DB_LOGIN}
      USER_DB_PASS: ${USER_DB_PASSWORD}
      USER_DB_PLATFORM: ${USER_DB_PLATFORM}
      USER_DB_POOL_SIZE: ${USER_DB_POOL_SIZE:-3}
      USER_DB_SCHEMA: ${USER_DB_SCHEMA:-userlogins5}

      # Auth Secret (needed along with user/acct DBs for auth)
      AUTH_SECRET_KEY: ${WDK_SECRET_KEY}

      # OAuth configuration for fetching user data
      OAUTH_URL: http://oauth-internal/oauth
      OAUTH_CLIENT_ID: ${SERVICE_OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${SERVICE_OAUTH_CLIENT_SECRET}

      # Map-reduce subsetting method configuraton
      BINARY_FILES_DIR: ${SERVICE_BINARY_FILES_DIR:-VEuPathDB/%DB_BUILD%/edaBinaryFiles}
      BINARY_FILES_MOUNT: ${SERVICE_BINARY_FILES_MOUNT:-/binaryFiles}
      DB_BUILD: ${DB_BUILD}
      FILE_SUBSETTING_ENABLED: ${FILE_SUBSETTING_ENABLED:-false}

      # Email Config
      SMTP_HOST: ${SMTP_HOST?required}
      SUPPORT_EMAIL: ${SUPPORT_EMAIL?required}
      EMAIL_DEBUG: ${EMAIL_DEBUG:-true}
      ENABLE_EMAIL: ${ENABLE_EMAIL:-true}

      # Parent directory for raw download files
      DOWNLOAD_FILES_MOUNT_PATH: ${DOWNLOAD_FILES_MOUNT_PATH:-/downloadFiles}

      # Project-specific properties for raw files parent directory
      PROJECT_SPECIFIC_PROP_CE_PROJECT_ID: ClinEpiDB
      PROJECT_SPECIFIC_PROP_CE_RAW_FILES_DIR: ClinEpiDB
      PROJECT_SPECIFIC_PROP_CE_USER_SCHEMA: edauserce

      PROJECT_SPECIFIC_PROP_ACE_PROJECT_ID: AllClinEpiDB
      PROJECT_SPECIFIC_PROP_ACE_RAW_FILES_DIR: ClinEpiDB
      PROJECT_SPECIFIC_PROP_ACE_USER_SCHEMA: edauserce

      PROJECT_SPECIFIC_PROP_MB_PROJECT_ID: MicrobiomeDB
      PROJECT_SPECIFIC_PROP_MB_RAW_FILES_DIR: MicrobiomeDB
      PROJECT_SPECIFIC_PROP_MB_USER_SCHEMA: edausermb

      PROJECT_SPECIFIC_PROP_PLASMO_PROJECT_ID: PlasmoDB
      PROJECT_SPECIFIC_PROP_PLASMO_RAW_FILES_DIR: PlasmoDB
      PROJECT_SPECIFIC_PROP_PLASMO_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_AMOEBA_PROJECT_ID: AmoebaDB
      PROJECT_SPECIFIC_PROP_AMOEBA_RAW_FILES_DIR: AmoebaDB
      PROJECT_SPECIFIC_PROP_AMOEBA_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_CRYPTO_PROJECT_ID: CryptoDB
      PROJECT_SPECIFIC_PROP_CRYPTO_RAW_FILES_DIR: CryptoDB
      PROJECT_SPECIFIC_PROP_CRYPTO_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_FUNGI_PROJECT_ID: FungiDB
      PROJECT_SPECIFIC_PROP_FUNGI_RAW_FILES_DIR: FungiDB
      PROJECT_SPECIFIC_PROP_FUNGI_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_GIARDIA_PROJECT_ID: GiardiaDB
      PROJECT_SPECIFIC_PROP_GIARDIA_RAW_FILES_DIR: GiardiaDB
      PROJECT_SPECIFIC_PROP_GIARDIA_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_HOST_PROJECT_ID: HostDB
      PROJECT_SPECIFIC_PROP_HOST_RAW_FILES_DIR: HostDB
      PROJECT_SPECIFIC_PROP_HOST_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_MICROSPORIDIA_PROJECT_ID: MicrosporidiaDB
      PROJECT_SPECIFIC_PROP_MICROSPORIDIA_RAW_FILES_DIR: MicrosporidiaDB
      PROJECT_SPECIFIC_PROP_MICROSPORIDIA_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_PIROPLASMA_PROJECT_ID: PiroplasmaDB
      PROJECT_SPECIFIC_PROP_PIROPLASMA_RAW_FILES_DIR: PiroplasmaDB
      PROJECT_SPECIFIC_PROP_PIROPLASMA_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_TOXO_PROJECT_ID: ToxoDB
      PROJECT_SPECIFIC_PROP_TOXO_RAW_FILES_DIR: ToxoDB
      PROJECT_SPECIFIC_PROP_TOXO_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_TRICH_PROJECT_ID: TrichDB
      PROJECT_SPECIFIC_PROP_TRICH_RAW_FILES_DIR: TrichDB
      PROJECT_SPECIFIC_PROP_TRICH_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_TRITRYP_PROJECT_ID: TriTrypDB
      PROJECT_SPECIFIC_PROP_TRITRYP_RAW_FILES_DIR: TrichDB
      PROJECT_SPECIFIC_PROP_TRITRYP_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_VECTORBASE_PROJECT_ID: VectorBase
      PROJECT_SPECIFIC_PROP_VECTORBASE_RAW_FILES_DIR: VectorBase
      PROJECT_SPECIFIC_PROP_VECTORBASE_USER_SCHEMA: edauservb

      PROJECT_SPECIFIC_PROP_VEUPATH_PROJECT_ID: EuPathDB
      PROJECT_SPECIFIC_PROP_VEUPATH_RAW_FILES_DIR: EuPathDB
      PROJECT_SPECIFIC_PROP_VEUPATH_USER_SCHEMA: edauservb

      # Queue Platform Postgres
      QUEUE_DB_NAME: ${COMPUTE_POSTGRES_DB:-computedb}
      QUEUE_DB_HOST: ${COMPUTE_POSTGRES_HOST:-compute-queue-db}
      QUEUE_DB_PORT: ${COMPUTE_POSTGRES_PORT:-5432}
      QUEUE_DB_USERNAME: ${COMPUTE_POSTGRES_USER:-postgresuser}
      QUEUE_DB_PASSWORD: ${COMPUTE_POSTGRES_PASS}
      QUEUE_DB_POOL_SIZE: ${COMPUTE_POSTGRES_POOL_SIZE:-10}

      # Queue Platform RabbitMQ
      JOB_QUEUE_USERNAME: ${COMPUTE_QUEUE_USER:-rabbituser}
      JOB_QUEUE_PASSWORD: ${COMPUTE_QUEUE_PASS}
      JOB_QUEUE_HOST: ${COMPUTE_QUEUE_HOST:-compute-queue}
      JOB_QUEUE_PORT: ${COMPUTE_QUEUE_PORT:-5672}
      SLOW_QUEUE_NAME: ${COMPUTE_QUEUE_SLOW_NAME:-slow-queue}
      SLOW_QUEUE_WORKERS: ${COMPUTE_QUEUE_SLOW_WORKERS:-2}
      FAST_QUEUE_NAME: ${COMPUTE_QUEUE_FAST_NAME:-fast-queue}
      FAST_QUEUE_WORKERS: ${COMPUTE_QUEUE_FAST_WORKERS:-5}

      # Queue Platform Minio
      S3_HOST: ${COMPUTE_S3_HOST}
      S3_PORT: ${COMPUTE_S3_PORT:-443}
      S3_BUCKET: ${COMPUTE_S3_BUCKET}
      S3_ACCESS_TOKEN: ${COMPUTE_S3_ACCESS_TOKEN}
      S3_SECRET_KEY: ${COMPUTE_S3_SECRET_KEY}
      S3_USE_HTTPS: ${COMPUTE_S3_USE_HTTPS:-true}

      # Job Settings
      JOB_CACHE_TIMEOUT_DAYS: ${JOB_CACHE_TIMEOUT_DAYS:-30}

      # VDI study access setting
      VDI_SCHEMA_SUFFIX: ${VDI_SCHEMA_SUFFIX:-dev_n} # e.g. dev_n, prod_s, qa_n

      SITE_URL: ${SITE_URL}                     # e.g. https://clinepidb.org/ce
      REGISTRATION_PATH: /app/user/registration # unused for now
      APPLICATION_PATH: /app/study-access       # unused for now

      ADMIN_AUTH_TOKEN: ${ADMIN_AUTH_TOKEN}     # Auth token

    networks:
      default:
      internal:
        aliases:
          - eda-internal
      traefik:
      monitoring-ext:

    labels:
      - "prometheus.scrape_enabled=true"
      - "com.centurylinklabs.watchtower.enable=${DATA_WATCHTOWER:-false}"
      - "traefik.http.services.${TRAEFIK_DATA_ROUTER:-edadata-dev}.loadbalancer.server.port=${DATA_SERVER_PORT:-80}"
      - "traefik.http.routers.${TRAEFIK_DATA_ROUTER:-edadata-dev}.rule=Host(`${TRAEFIK_DATA_HOST:-mbio-dev.local.apidb.org}`) && PathPrefix(`/eda`)"
      - "traefik.http.routers.${TRAEFIK_DATA_ROUTER:-edadata-dev}.tls=${USE_TRAEFIK_SSL:-true}"
      - "traefik.http.routers.${TRAEFIK_DATA_ROUTER:-edadata-dev}.entrypoints=${TRAEFIK_ENTRYPOINTS:-local}"
      - "traefik.http.routers.${TRAEFIK_DATA_ROUTER:-edadata-dev}.middlewares=eda-stripprefix@docker"
      - "traefik.http.middlewares.eda-stripprefix.stripprefix.prefixes=/eda"
      - "traefik.docker.network=traefik"

  compute-queue-db:
    image: postgres:14.3-alpine3.16
    environment:
      POSTGRES_USER: ${COMPUTE_POSTGRES_USER:-postgresuser}
      POSTGRES_PASSWORD: ${COMPUTE_POSTGRES_PASS}
      POSTGRES_DB: ${COMPUTE_POSTGRES_DB:-computedb}
    volumes:
      - eda-compute-db:/var/lib/postgresql/data
    networks:
      - internal
    labels:
      - "traefik.enable=false"

  compute-queue:
    image: rabbitmq:3.10.5-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${COMPUTE_QUEUE_USER:-rabbituser}
      RABBITMQ_DEFAULT_PASS: ${COMPUTE_QUEUE_PASS}
    networks:
      - internal
    labels:
      - "traefik.enable=false"

  rserve:
    image: veupathdb/rserve:${RSERVE_TAG:-latest}
    networks:
      internal:
        aliases:
          - rserve-internal

  #####################
  #### VDI Services ###
  #####################

  cache-db:
    image: veupathdb/vdi-internal-db:${VDI_CACHE_DB_TAG:-latest}
    environment:
      POSTGRES_USER: ${CACHE_DB_USERNAME:?}
      POSTGRES_PASSWORD: ${CACHE_DB_PASSWORD:?}
      POSTGRES_DB: ${CACHE_DB_NAME:?}
      PGPORT: ${CACHE_DB_PORT:-5433}
    healthcheck:
      test: "pg_isready -U ${CACHE_DB_USERNAME:?} -d ${CACHE_DB_NAME:?} -p ${CACHE_DB_PORT:-5433}"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
    - internal
    volumes:
    - cache-db-data:/var/lib/postgresql/data
    labels:
    - "com.centurylinklabs.watchtower.enable=${VDI_POSTGRES_WATCHTOWER:-false}"

  kafka:
    image: veupathdb/apache-kafka:${VDI_KAFKA_TAG:-latest}
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS:-PLAINTEXT://kafka:9092}
    networks:
    - internal

  vdi:
    image: veupathdb/vdi-service:${VDI_SERVICE_TAG:-latest}
    depends_on:
    - cache-db
    - kafka
    - plugin-biom
    links:
    - cache-db
    - kafka
    - plugin-biom
    networks:
    - internal
    - traefik
    - monitoring-ext
    - rabbitmq

    stop_grace_period: 1m
    environment:

      # JVM Args
      JVM_MEM_ARGS: ${JVM_MEM_ARGS}

      # Rest Service
      SERVER_PORT: ${VDI_SERVICE_HTTP_PORT:-80}
      AUTH_SECRET_KEY: ${WDK_SECRET_KEY:?}
      ADMIN_AUTH_TOKEN: ${ADMIN_AUTH_TOKEN:?}
      ENABLE_CORS: ${ENABLE_CORS:-false}

      # LDAP Configuration
      LDAP_SERVER: ${LDAP_SERVER:?}
      ORACLE_BASE_DN: ${ORACLE_BASE_DN:?}

      # OAuth Configuration
      OAUTH_URL: http://oauth-internal/oauth
      OAUTH_CLIENT_ID: ${SERVICE_OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${SERVICE_OAUTH_CLIENT_SECRET}

      # Upload Configuration
      MAX_UPLOAD_FILE_SIZE: ${MAX_UPLOAD_FILE_SIZE}
      USER_UPLOAD_QUOTA: ${USER_UPLOAD_QUOTA}

      # Account DB connection details
      ACCT_DB_TNS_NAME: ${ACCT_DB_TNS_NAME}
      ACCT_DB_HOST: ${ACCT_DB_HOST}
      ACCT_DB_PORT: ${ACCT_DB_PORT}
      ACCT_DB_NAME: ${ACCT_DB_NAME}
      ACCT_DB_USER: ${ACCT_DB_LOGIN}
      ACCT_DB_PASS: ${ACCT_DB_PASSWORD}
      ACCT_DB_POOL_SIZE: ${ACCT_DB_POOL_SIZE:-3}
      ACCT_DB_PLATFORM: ${ACCT_DB_PLATFORM}

      # Hard Delete Handler
      HARD_DELETE_HANDLER_KAFKA_CONSUMER_CLIENT_ID: ${HARD_DELETE_HANDLER_KAFKA_CONSUMER_CLIENT_ID}
      HARD_DELETE_HANDLER_WORKER_POOL_SIZE: ${HARD_DELETE_HANDLER_WORKER_POOL_SIZE}
      HARD_DELETE_HANDLER_WORK_QUEUE_SIZE: ${HARD_DELETE_HANDLER_WORK_QUEUE_SIZE}

      # Import Handler
      IMPORT_HANDLER_KAFKA_CONSUMER_CLIENT_ID: ${IMPORT_HANDLER_KAFKA_CONSUMER_CLIENT_ID}
      IMPORT_HANDLER_WORKER_POOL_SIZE: ${IMPORT_HANDLER_WORKER_POOL_SIZE}
      IMPORT_HANDLER_WORK_QUEUE_SIZE: ${IMPORT_HANDLER_WORK_QUEUE_SIZE}

      # Install Data Handler
      INSTALL_DATA_HANDLER_KAFKA_CONSUMER_CLIENT_ID: ${INSTALL_DATA_HANDLER_KAFKA_CONSUMER_CLIENT_ID}
      INSTALL_DATA_HANDLER_WORKER_POOL_SIZE: ${INSTALL_DATA_HANDLER_WORKER_POOL_SIZE}
      INSTALL_DATA_HANDLER_WORK_QUEUE_SIZE: ${INSTALL_DATA_HANDLER_WORK_QUEUE_SIZE}

      # Pruner
      DATASET_PRUNING_DELETION_THRESHOLD: ${DATASET_PRUNING_DELETION_THRESHOLD}
      DATASET_PRUNING_INTERVAL: ${DATASET_PRUNING_INTERVAL}
      DATASET_PRUNING_WAKEUP_INTERVAL: ${DATASET_PRUNING_WAKEUP_INTERVAL}

      # Share Handler
      SHARE_HANDLER_KAFKA_CONSUMER_CLIENT_ID: ${SHARE_HANDLER_KAFKA_CONSUMER_CLIENT_ID}
      SHARE_HANDLER_WORKER_POOL_SIZE: ${SHARE_HANDLER_WORKER_POOL_SIZE}
      SHARE_HANDLER_WORK_QUEUE_SIZE: ${SHARE_HANDLER_WORK_QUEUE_SIZE}

      # Soft Delete Handler
      SOFT_DELETE_HANDLER_KAFKA_CONSUMER_CLIENT_ID: ${SOFT_DELETE_HANDLER_KAFKA_CONSUMER_CLIENT_ID}
      SOFT_DELETE_HANDLER_WORKER_POOL_SIZE: ${SOFT_DELETE_HANDLER_WORKER_POOL_SIZE}
      SOFT_DELETE_HANDLER_WORK_QUEUE_SIZE: ${SOFT_DELETE_HANDLER_WORK_QUEUE_SIZE}

      # Update Meta Handler
      UPDATE_META_HANDLER_KAFKA_CONSUMER_CLIENT_ID: ${UPDATE_META_HANDLER_KAFKA_CONSUMER_CLIENT_ID}
      UPDATE_META_HANDLER_WORKER_POOL_SIZE: ${UPDATE_META_HANDLER_WORKER_POOL_SIZE}
      UPDATE_META_HANDLER_WORK_QUEUE_SIZE: ${UPDATE_META_HANDLER_WORK_QUEUE_SIZE}

      # Reconciliation Handler
      RECONCILIATION_HANDLER_KAFKA_CONSUMER_CLIENT_ID: ${RECONCILIATION_HANDLER_KAFKA_CONSUMER_CLIENT_ID}
      RECONCILIATION_HANDLER_WORKER_POOL_SIZE: ${RECONCILIATION_HANDLER_WORKER_POOL_SIZE}
      RECONCILIATION_HANDLER_WORK_QUEUE_SIZE: ${RECONCILIATION_HANDLER_WORK_QUEUE_SIZE}

      # Cache DB
      CACHE_DB_USERNAME: ${CACHE_DB_USERNAME:?}
      CACHE_DB_PASSWORD: ${CACHE_DB_PASSWORD:?}
      CACHE_DB_NAME: ${CACHE_DB_NAME:?}
      CACHE_DB_HOST: ${CACHE_DB_HOST:?}
      CACHE_DB_PORT: ${CACHE_DB_PORT}
      CACHE_DB_POOL_SIZE: ${CACHE_DB_POOL_SIZE}

      # Kafka
      KAFKA_SERVERS: ${KAFKA_SERVERS:?}
      KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID:?}
      KAFKA_PRODUCER_CLIENT_ID: ${KAFKA_PRODUCER_CLIENT_ID:?}

      KAFKA_TOPIC_HARD_DELETE_TRIGGERS: ${KAFKA_TOPIC_HARD_DELETE_TRIGGERS}
      KAFKA_TOPIC_IMPORT_TRIGGERS: ${KAFKA_TOPIC_IMPORT_TRIGGERS}
      KAFKA_TOPIC_INSTALL_TRIGGERS: ${KAFKA_TOPIC_INSTALL_TRIGGERS}
      KAFKA_TOPIC_SHARE_TRIGGERS: ${KAFKA_TOPIC_SHARE_TRIGGERS}
      KAFKA_TOPIC_SOFT_DELETE_TRIGGERS: ${KAFKA_TOPIC_SOFT_DELETE_TRIGGERS}
      KAFKA_TOPIC_UPDATE_META_TRIGGERS: ${KAFKA_TOPIC_UPDATE_META_TRIGGERS}
      KAFKA_TOPIC_RECONCILIATION_TRIGGERS: ${KAFKA_TOPIC_RECONCILIATION_TRIGGERS}

      KAFKA_MESSAGE_KEY_HARD_DELETE_TRIGGERS: ${KAFKA_MESSAGE_KEY_HARD_DELETE_TRIGGERS}
      KAFKA_MESSAGE_KEY_IMPORT_TRIGGERS: ${KAFKA_MESSAGE_KEY_IMPORT_TRIGGERS}
      KAFKA_MESSAGE_KEY_INSTALL_TRIGGERS: ${KAFKA_MESSAGE_KEY_INSTALL_TRIGGERS}
      KAFKA_MESSAGE_KEY_SHARE_TRIGGERS: ${KAFKA_MESSAGE_KEY_SHARE_TRIGGERS}
      KAFKA_MESSAGE_KEY_SOFT_DELETE_TRIGGERS: ${KAFKA_MESSAGE_KEY_SOFT_DELETE_TRIGGERS}
      KAFKA_MESSAGE_KEY_UPDATE_META_TRIGGERS: ${KAFKA_MESSAGE_KEY_UPDATE_META_TRIGGERS}
      KAFKA_MESSAGE_KEY_RECONCILIATION_TRIGGERS: ${KAFKA_MESSAGE_KEY_RECONCILIATION_TRIGGERS}

      # RabbitMQ
      GLOBAL_RABBIT_HOST: ${GLOBAL_RABBIT_HOST:?}
      GLOBAL_RABBIT_PORT: ${GLOBAL_RABBIT_PORT}
      GLOBAL_RABBIT_USERNAME: ${GLOBAL_RABBIT_USERNAME:?}
      GLOBAL_RABBIT_PASSWORD: ${GLOBAL_RABBIT_PASSWORD:?}
      GLOBAL_RABBIT_USE_TLS: ${GLOBAL_RABBIT_USE_TLS}

      GLOBAL_RABBIT_CONNECTION_NAME: ${GLOBAL_RABBIT_CONNECTION_NAME:-vdi}

      GLOBAL_RABBIT_VDI_EXCHANGE_NAME: ${GLOBAL_RABBIT_VDI_EXCHANGE_NAME:?}
      GLOBAL_RABBIT_VDI_EXCHANGE_TYPE: ${GLOBAL_RABBIT_VDI_EXCHANGE_TYPE}
      GLOBAL_RABBIT_VDI_EXCHANGE_DURABLE: ${GLOBAL_RABBIT_VDI_EXCHANGE_DURABLE}

      GLOBAL_RABBIT_VDI_QUEUE_NAME: ${GLOBAL_RABBIT_VDI_QUEUE_NAME:?}
      GLOBAL_RABBIT_VDI_QUEUE_DURABLE: ${GLOBAL_RABBIT_VDI_QUEUE_DURABLE}

      GLOBAL_RABBIT_VDI_ROUTING_KEY: ${GLOBAL_RABBIT_VDI_ROUTING_KEY:-vdi-bucket-notifications}

      GLOBAL_RABBIT_VDI_POLLING_INTERVAL: ${GLOBAL_RABBIT_VDI_POLLING_INTERVAL}

      # MinIO
      S3_HOST: ${S3_HOST:?}
      S3_PORT: ${S3_PORT:-9000}
      S3_USE_HTTPS: ${S3_USE_HTTPS:-true}
      S3_ACCESS_TOKEN: ${S3_ACCESS_TOKEN:?}
      S3_SECRET_KEY: ${S3_SECRET_KEY:?}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:?}

      # Reconciler
      RECONCILER_FULL_ENABLED: ${RECONCILER_FULL_ENABLED}
      RECONCILER_FULL_RUN_INTERVAL: ${RECONCILER_FULL_RUN_INTERVAL}
      RECONCILER_SLIM_RUN_INTERVAL: ${RECONCILER_SLIM_RUN_INTERVAL}

      #
      # Wildcard Plugin Variables
      #

      # BIOM Plugin
      PLUGIN_HANDLER_BIOM_NAME: ${PLUGIN_HANDLER_BIOM_NAME:?}
      PLUGIN_HANDLER_BIOM_DISPLAY_NAME: ${PLUGIN_HANDLER_BIOM_DISPLAY_NAME:?}
      PLUGIN_HANDLER_BIOM_VERSION: ${PLUGIN_HANDLER_BIOM_VERSION:?}
      PLUGIN_HANDLER_BIOM_ADDRESS: ${PLUGIN_HANDLER_BIOM_ADDRESS:?}
      PLUGIN_HANDLER_BIOM_PROJECT_IDS: ${PLUGIN_HANDLER_BIOM_PROJECT_IDS}

      #
      # Wildcard Database Variables
      #

      DB_CONNECTION_ENABLED_MICROBIOME: ${DB_CONNECTION_ENABLED_MICROBIOME}
      DB_CONNECTION_NAME_MICROBIOME: ${DB_CONNECTION_NAME_MICROBIOME:?}
      DB_CONNECTION_LDAP_MICROBIOME: ${DB_CONNECTION_LDAP_MICROBIOME:?}
      DB_CONNECTION_PASS_MICROBIOME: ${DB_CONNECTION_PASS_MICROBIOME:?}
      DB_CONNECTION_DATA_SCHEMA_MICROBIOME: ${DB_CONNECTION_DATA_SCHEMA_MICROBIOME:-vdi_datasets_${VDI_SCHEMA_SUFFIX}}
      DB_CONNECTION_CONTROL_SCHEMA_MICROBIOME: ${DB_CONNECTION_CONTROL_SCHEMA_MICROBIOME:-vdi_control_${VDI_SCHEMA_SUFFIX}}
      DB_CONNECTION_POOL_SIZE_MICROBIOME: ${DB_CONNECTION_POOL_SIZE_MICROBIOME}
      DB_CONNECTION_PG_DB_NAME: ${DB_CONNECTION_PG_DB_NAME_MICROBIOME}
      DB_HOST_MICROBIOME: ${DB_CONNECTION_HOST_MICROBIOME}
      DB_PLATFORM_MICROBIOME: ${DB_CONNECTION_PLATFORM_MICROBIOME:?}
      DB_CONNECTION_PG_DB_NAME_MICROBIOME: ${DB_CONNECTION_PG_DB_NAME_MICROBIOME}
      DB_PORT_MICROBIOME: ${DB_CONNECTION_PORT_MICROBIOME}

    labels:
    - "prometheus.scrape_enabled=true"
    - "com.centurylinklabs.watchtower.enable=${VDI_SERVICE_WATCHTOWER:-false}"
    - "traefik.http.services.${TRAEFIK_SERVICE_ROUTER:-vdi-dev}.loadbalancer.server.port=${VDI_SERVICE_HTTP_PORT:-80}"
    - "traefik.http.routers.${TRAEFIK_SERVICE_ROUTER:-vdi-dev}.rule=Host(`${TRAEFIK_DATA_HOST:-mbio-dev.local.apidb.org}`) && PathPrefix(`/vdi`)"
    - "traefik.http.routers.${TRAEFIK_SERVICE_ROUTER:-vdi-dev}.tls=${USE_TRAEFIK_SSL:-true}"
    - "traefik.http.routers.${TRAEFIK_SERVICE_ROUTER:-vdi-dev}.entrypoints=${TRAEFIK_ENTRYPOINTS:-local}"
    - "traefik.http.routers.${TRAEFIK_SERVICE_ROUTER:-vdi-dev}.middlewares=vdi-stripprefix@docker"
    - "traefik.http.middlewares.vdi-stripprefix.stripprefix.prefixes=/vdi"
    - "traefik.docker.network=traefik"

  plugin-biom:
    image: veupathdb/vdi-plugin-biom:${VDI_PLUGIN_BIOM_TAG:-latest}
    networks:
      internal:
        aliases:
        - biom
      monitoring-ext: {}
    labels:
    - "prometheus.scrape_enabled=true"
    - "com.centurylinklabs.watchtower.enable=${PLUGIN_BIOM_WATCHTOWER:-false}"
    volumes:
    - type: bind
      source: ${DATASET_DIRECTORY_SOURCE_PATH:-${DATA_STORAGE_ROOT_DIR}/userDatasets/vdi_datasets_${VDI_SCHEMA_SUFFIX}}
      target: ${DATASET_DIRECTORY_TARGET_PATH:?}
    environment:
      LDAP_SERVER: ${LDAP_SERVER:?}
      ORACLE_BASE_DN: ${ORACLE_BASE_DN:?}
      CUSTOM_PATH: ${PLUGIN_HANDLER_BIOM_CUSTOM_PATH}
      SITE_BUILD: ${SITE_BUILD:?}
      DATASET_INSTALL_ROOT: ${DATASET_DIRECTORY_TARGET_PATH:?}

      IMPORT_SCRIPT_MAX_DURATION: ${PLUGIN_HANDLER_BIOM_IMPORT_SCRIPT_MAX_DURATION}
      INSTALL_DATA_SCRIPT_MAX_DURATION: ${PLUGIN_HANDLER_BIOM_INSTALL_DATA_SCRIPT_MAX_DURATION}
      INSTALL_META_SCRIPT_MAX_DURATION: ${PLUGIN_HANDLER_BIOM_INSTALL_META_SCRIPT_MAX_DURATION}
      UNINSTALL_SCRIPT_MAX_DURATION: ${PLUGIN_HANDLER_BIOM_UNINSTALL_SCRIPT_MAX_DURATION}
      CHECK_COMPAT_SCRIPT_MAX_DURATION: ${PLUGIN_HANDLER_BIOM_CHECK_COMPAT_SCRIPT_MAX_DURATION}

      DB_CONNECTION_ENABLED_MICROBIOME: ${DB_CONNECTION_ENABLED_MICROBIOME}
      DB_CONNECTION_NAME_MICROBIOME: ${DB_CONNECTION_NAME_MICROBIOME:?}
      DB_CONNECTION_LDAP_MICROBIOME: ${DB_CONNECTION_LDAP_MICROBIOME}
      DB_CONNECTION_PASS_MICROBIOME: ${DB_CONNECTION_PASS_MICROBIOME:?}
      DB_CONNECTION_DATA_SCHEMA_MICROBIOME: ${DB_CONNECTION_DATA_SCHEMA_MICROBIOME:-vdi_datasets_${VDI_SCHEMA_SUFFIX}}
      DB_CONNECTION_CONTROL_SCHEMA_MICROBIOME: ${DB_CONNECTION_CONTROL_SCHEMA_MICROBIOME:-vdi_control_${VDI_SCHEMA_SUFFIX}}
      DB_CONNECTION_POOL_SIZE_MICROBIOME: ${DB_CONNECTION_POOL_SIZE_MICROBIOME}

      DB_CONNECTION_PG_DB_NAME: ${DB_CONNECTION_PG_DB_NAME_MICROBIOME}
      DB_HOST_MICROBIOME: ${DB_CONNECTION_HOST_MICROBIOME}
      DB_PLATFORM_MICROBIOME: ${DB_CONNECTION_PLATFORM_MICROBIOME:?}
      DB_CONNECTION_PG_DB_NAME_MICROBIOME: ${DB_CONNECTION_PG_DB_NAME_MICROBIOME}
      DB_PORT_MICROBIOME: ${DB_CONNECTION_PORT_MICROBIOME}
