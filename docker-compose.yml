
services:

  wdk:
    image: mbio-wdk:${MBIO_WDK_TAG:-latest}

    volumes:
      - type: bind
        source: ${API_SITE_WEB_SERVICE_FILES_DIR:-/var/www/Common/apiSiteFilesMirror/webServices}
        target: ${API_SITE_WEB_SERVICE_FILES_MOUNT:-/webServiceFiles}
        read_only: true
      - type: bind
        source: ${STEP_ANALYSIS_JOBS_DIR:-/var/www/Common/tmp/wdkStepAnalysisJobs}
        target: ${STEP_ANALYSIS_JOBS_MOUNT:-/stepAnalysisJobs}
      - type: bind
        source: ${LOGS_DIR:-/var/www/Common/logs}
        target: ${LOGS_MOUNT:-/opt/logs}
      - type: bind
        source: ${SECRETS_DIR:-/var/www/Common/secrets}
        target: ${SECRETS_MOUNT:-/secrets}
        read_only: true

    environment:

      # external file mount locations
      API_SITE_WEB_SERVICE_FILES_DIR: ${API_SITE_WEB_SERVICE_FILES_MOUNT:-/webServiceFiles}
      STEP_ANALYSIS_JOBS_DIR: ${STEP_ANALYSIS_JOBS_MOUNT:-/stepAnalysisJobs}
      TOMCAT_LOGS_DIR: ${LOGS_MOUNT:-/opt/logs}/tomcat
      NGINX_LOGS_DIR: ${LOGS_MOUNT:-/opt/logs}/nginx

      # required mounted secret value files
      WDK_SECRET_KEY_FILE: ${SECRETS_MOUNT:-/secrets}/${WDK_SECRET_KEY_FILENAME:-wdkSecretKey.txt}
      WDK_CACERTS_FILE: ${SECRETS_MOUNT:-/secrets}/${WDK_CACERTS_FILENAME:-cacerts}
      OAUTH_SIGNING_KEY_STORE: ${SECRETS_MOUNT:-/secrets}/${OAUTH_SIGNING_KEY_STORE_FILENAME:-oauth-keys.pkcs12}
      OAUTH_SIGNING_KEY_STORE_PW: ${OAUTH_SIGNING_KEY_STORE_PW}

      # oauth contact information
      OAUTH_URL: ${OAUTH_URL}
      WDK_OAUTH_CLIENT_ID: ${WDK_OAUTH_CLIENT_ID}
      WDK_OAUTH_CLIENT_SECRET: ${WDK_OAUTH_CLIENT_SECRET}
      SERVICE_OAUTH_CLIENT_ID: ${SERVICE_OAUTH_CLIENT_ID}
      SERVICE_OAUTH_CLIENT_SECRET: ${SERVICE_OAUTH_CLIENT_SECRET}

      # app db (WDK)
      APP_DB_LOGIN: ${APP_DB_LOGIN}
      APP_DB_PASSWORD: ${APP_DB_PASSWORD}
      APP_DB_CONNECTION_URL: ${APP_DB_CONNECTION_URL}

      # user db (WDK)
      USER_DB_LOGIN: ${USER_DB_LOGIN}
      USER_DB_PASSWORD: ${USER_DB_PASSWORD}
      USER_DB_CONNECTION_URL: ${USER_DB_CONNECTION_URL}

      # account db (oauth)
      ACCT_DB_LOGIN: ${ACCT_DB_LOGIN}
      ACCT_DB_PASSWORD: ${ACCT_DB_PASSWORD}
      ACCT_DB_CONNECTION_URL: ${ACCT_DB_CONNECTION_URL}

    networks:
      - traefik

    labels:
      - "prometheus.scrape_enabled=true"
      - "com.centurylinklabs.watchtower.enable=${MBIOWDK_WATCHTOWER:-false}"
      - "traefik.http.services.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.loadbalancer.server.port=${MBIOWDK_SERVER_PORT:-80}"
      - "traefik.http.routers.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.rule=Host(`${TRAEFIK_MBIOWDK_HOST:-mbiowdk-dev.local.apidb.org}`)"
      - "traefik.http.routers.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.tls=true"
      - "traefik.http.routers.${TRAEFIK_MBIOWDK_ROUTER:-mbiowdk-dev}.entrypoints=${TRAEFIK_ENTRYPOINTS:-local}"
      - "traefik.docker.network=traefik"

networks:
  traefik:
    external: true
